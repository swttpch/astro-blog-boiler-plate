---
import Container from '../../components/Container.astro';
import LinkWithArrow from '../../components/LinkWithArrow.astro';
import PageHeader from '../../components/PageHeader.astro';
import Screen from '../../components/Screen.astro';
import type Category from '../../interfaces/category';
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import fetchApi from '../../lib/strapi';
import { defaultBlogRequests } from '../../lib/blog';
import { getLang, useTranslations } from '../../i18n/utils';
const lang = getLang();
const t = useTranslations(lang);
const categories = await fetchApi<Category[]>({
  endpoint: 'categories',
  wrappedByKey: 'data',
  query: {
    populate: '*',
  },
});

const { blogInfo, headerNavigation, footerNavigation } = await defaultBlogRequests();
---

<DefaultLayout
  title={t('categories.title')}
  description={t('categories.description')}
  blogInfo={blogInfo}
  headerNavigation={headerNavigation}
  footerNavigation={footerNavigation}
>
  <PageHeader
    description={t('categories.description')}
    items={[{ title: t('categories'), url: '/c/' }]}
    title={t('categories.title')}
  />
  <Screen class={'py-32 lg:pb-80'}>
    <Container>
      <div class="w-full grid grid-cols-1 lg:grid-cols-3 lg:grid-flow-row gap-32">
        {
          categories.map((category) => {
            if (
              !category.attributes.subCategories.data ||
              category.attributes.subCategories.data.length === 0
            )
              return (
                <div class="flex flex-col self-stretch items-start gap-24">
                  <a href={'/c/' + category.attributes.slug}>
                    <h2 class="font-medium text-text-main self-stretch">
                      {category.attributes.title}
                    </h2>
                  </a>
                </div>
              );
            return (
              <div class="flex flex-col self-stretch items-start gap-24 ">
                <a href={'/c/' + category.attributes.slug}>
                  <h2 class="font-medium text-text-main self-stretch hover:text-primary-base">
                    {category.attributes.title}
                  </h2>
                </a>
                <div class="flex flex-col gap-20">
                  {category.attributes.subCategories.data.map((subCategory) => {
                    return (
                      <LinkWithArrow to={'/c/' + subCategory.attributes.slug}>
                        {subCategory.attributes.title}
                      </LinkWithArrow>
                    );
                  })}
                </div>
              </div>
            );
          })
        }
      </div>
    </Container>
  </Screen>
</DefaultLayout>
