---

import { PAGE_SIZE } from '../../../constants/common';
import type Article from '../../../interfaces/article';
import type { BlogInfo } from '../../../interfaces/blog-info';
import type Category from '../../../interfaces/category';
import type Meta from '../../../interfaces/meta';
import CategoriesAndTags from '../../../layouts/CategoriesAndTags.astro';
import fetchApi from '../../../lib/strapi';

const { page, slug } = Astro.params;

let cp = page || 1;

const categoryData = await fetchApi<Category>({
  endpoint: `/categories`,
  wrappedByKey: 'data',
  wrappedByList: true,
  query: {
    filters: {
      slug: {
        $eq: slug,
      },
    },
    populate: {
      highlights: {
        populate: '*',
      },
    },
  },
});

if (!categoryData) {
  Astro.response.status = 404;
  Astro.response.statusText = 'Not found';
}

const articlesResponse = await fetchApi<{ data: Article[]; meta: Meta }>({
  endpoint: '/articles',
  query: {
    publicationState: 'live',
    sort: ['publishedAt:desc'],
    filters: {
      categories: {
        id: {
          $eq: categoryData.id,
        },
      },
    },
    populate: {
      author: {
        fields: '*',
        populate: '*',
      },
      mainImage: '*',
      categories: '*',
    },
    pagination: {
      page: cp,
      pageSize: PAGE_SIZE,
    },
  },
});
---
<CategoriesAndTags 
articles={articlesResponse.data} 
curPage={articlesResponse.meta.pagination.page}
data={categoryData}
curPath={`/c/${slug}/`}
totalPages={articlesResponse.meta.pagination.pageCount}
highlights={categoryData.attributes.highlights.data}
/>