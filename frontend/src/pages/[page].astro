---
import type { GetStaticPaths } from 'astro';
import Home from '../layouts/HomeLayout.astro';
import fetchApi from '../lib/strapi';
import type Meta from '../interfaces/meta';
import { PAGE_SIZE } from '../constants/common';
import { defaultBlogRequests, defaultBlogRequestsWithCategoriesAndTags, homePageBlogRequests } from '../lib/blog';
import type { Tag } from '../interfaces/tag';
import type Category from '../interfaces/category';

export const prerender = true

export const getStaticPaths = (async () => {
  const countArticles = await fetchApi<Meta>({ endpoint: 'articles', wrappedByKey: 'meta' });
  const pages = Array.from({length: Math.ceil(countArticles.pagination.total / PAGE_SIZE)}, (_, i) => i+ 1)
  const {blogInfo,headerNavigation} = await defaultBlogRequests()
  


  return pages.map((page, index) => ({
    params: {
      page: page.toString()
    },
    props: {blogInfo, headerNavigation}
  }));
}) satisfies GetStaticPaths;

const {blogInfo,headerNavigation} = Astro.props
const {page} = Astro.params

const {articleResponse} = await homePageBlogRequests({currentPage: +page})
const {categories,tags} = await defaultBlogRequestsWithCategoriesAndTags()

---

<Home 
  blogInfo={blogInfo} 
  headerNavigation={headerNavigation} 
  categories={categories} 
  tags={tags} 
  articleResponse={articleResponse}
/>
