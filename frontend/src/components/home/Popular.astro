---
import type Article from '../../interfaces/article';
import Container from '../Container.astro';
import Screen from '../Screen.astro';
import LinkWithArrow from '../LinkWithArrow.astro';
import SectionHeader from '../SectionHeader.astro';
import ArticleComponent from '../article/Article.astro';
import CategoryBadge from '../CategoryBadge.astro';
import ArticleContent from '../article/ArticleContent.astro';
import ArticleTitle from '../article/ArticleTitle.astro';
import ArticleImage from '../article/ArticleImage.astro';
import AuthorBox from '../author-box/AuthorBox.astro';
import AuthorBoxAvatar from '../author-box/AuthorBoxAvatar.astro';
import AuthorBoxBody from '../author-box/AuthorBoxBody.astro';
import AuthorBoxName from '../author-box/AuthorBoxName.astro';
import AuthorBoxArticleInfo from '../author-box/AuthorBoxArticleInfo.astro';
import FormattedDate from '../FormattedDate.astro';
import ArticleDescription from '../article/ArticleDescription.astro';

type Props = {
  articles: [Article, Article];
};

const { articles } = Astro.props;
---

<Screen>
  <Container class="flex-col">
    <SectionHeader title="Mais populares">
      <LinkWithArrow to="#articles-list"> Ver todos </LinkWithArrow>
    </SectionHeader>
    <div class="flex gap-32 self-stretch overflow-scroll lg:overflow-hidden lg:flex-row flex-col">
      {
        articles.map((article) => {
          const category = article.attributes.categories.data?.[0];
          const author = article.attributes.author.data;
          const date = article.attributes.publishedAt;
          return (
            <ArticleComponent
              href={'/p/' + article.attributes.slug}
              class={'lg:flex-1 h-[400px] lg:flex-row flex-col'}
            >
              <ArticleImage
                image={article.attributes.mainImage.data}
                class={'w-full h-[184px] lg:w-auto lg:h-auto lg:self-stretch lg:flex-[1_0_0]'}
              />
              <ArticleContent class={'lg:flex-[1_0_0] h-full w-full py-16'}>
                <ArticleContent class={'gap-24'}>
                  {category && <CategoryBadge>{category.attributes.title}</CategoryBadge>}
                  <ArticleContent class={'gap-16'}>
                    <ArticleTitle class="font-medium">{article.attributes.title}</ArticleTitle>
                    <ArticleDescription class={'font-normal'}>
                      {article.attributes.previewText}
                    </ArticleDescription>
                  </ArticleContent>
                </ArticleContent>
                {author && (
                  <AuthorBox>
                    <AuthorBoxAvatar
                      image={author.attributes.avatar?.data}
                      name={author.attributes.name}
                    />
                    <AuthorBoxBody>
                      <AuthorBoxName>{author.attributes.name}</AuthorBoxName>
                      <AuthorBoxArticleInfo>
                        <FormattedDate date={new Date(date)} /> â€¢ {article.attributes.readingTime}{' '}
                        min de leitura
                      </AuthorBoxArticleInfo>
                    </AuthorBoxBody>
                  </AuthorBox>
                )}
              </ArticleContent>
            </ArticleComponent>
          );
        })
      }
    </div>
  </Container>
</Screen>
