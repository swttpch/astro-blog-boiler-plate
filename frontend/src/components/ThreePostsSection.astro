---
import AuthorBox from './author-box/AuthorBox.astro';
import AuthorBoxArticleInfo from './author-box/AuthorBoxArticleInfo.astro';
import AuthorBoxAvatar from './author-box/AuthorBoxAvatar.astro';
import AuthorBoxBody from './author-box/AuthorBoxBody.astro';
import AuthorBoxName from './author-box/AuthorBoxName.astro';
import CategoryBadge from './CategoryBadge.astro';
import Container from './Container.astro';
import FormattedDate from './FormattedDate.astro';
import Screen from './Screen.astro';
import type Article from '../interfaces/article';
import ArticleComponent from './article/Article.astro';
import ArticleImage from './article/ArticleImage.astro';
import ArticleContent from './article/ArticleContent.astro';
import ArticleTitle from './article/ArticleTitle.astro';
import ArticleDescription from './article/ArticleDescription.astro';
import { getLang, useTranslations } from '../i18n/utils';
const lang = getLang();
const t = useTranslations(lang);

type Props = {
  articles: Article[];
};
const { articles } = Astro.props;

const length = articles.length;
---

{
  length >= 3 && (
    <Screen class={'lg:p-32'}>
      <Container class={'lg:py-0 gap-16 lg:gap-32 lg:flex-row flex-col'}>
        {articles.slice(0, 3).map((el) => {
          const category = el.attributes.categories?.data?.[0];
          const author = el.attributes.author.data;
          const date = new Date(el.attributes.createdAt);
          const image = el.attributes.mainImage?.data;
          return (
            <ArticleComponent
              href={'/p/' + el.attributes.slug}
              class={'flex-col self-stretch gap-8 flex-1'}
            >
              <ArticleImage
                class={'lg:w-full flex-[0_0_244px] lg:flex-[0_0_396px]'}
                image={image}
              />
              <ArticleContent class={'lg:p-16 p-16 gap-24 justify-between self-stretch flex-1'}>
                <ArticleContent class={'gap-16'}>
                  <ArticleContent class={'gap-24'}>
                    <div class="self-stretch flex items-center justify-between">
                      {category && <CategoryBadge>{category.attributes.title}</CategoryBadge>}
                      <AuthorBoxArticleInfo class="flex items-center">
                        <FormattedDate date={date} /> â€¢ {el.attributes.readingTime}{' '}
                        {t('readingTime')}
                      </AuthorBoxArticleInfo>
                    </div>
                    <ArticleTitle>{el.attributes.title}</ArticleTitle>
                  </ArticleContent>
                  <ArticleDescription class={'max-h-[84px] text-ellipsis overflow-hidden'}>
                    {el.attributes.previewText}
                  </ArticleDescription>
                </ArticleContent>
                {author && (
                  <AuthorBox>
                    <AuthorBoxAvatar
                      image={author.attributes.avatar?.data}
                      name={author.attributes.name}
                    />
                    <AuthorBoxBody>
                      <AuthorBoxName>{author.attributes.name}</AuthorBoxName>
                      <AuthorBoxArticleInfo>{author.attributes.jobTitle}</AuthorBoxArticleInfo>
                    </AuthorBoxBody>
                  </AuthorBox>
                )}
              </ArticleContent>
            </ArticleComponent>
          );
        })}
      </Container>
    </Screen>
  )
}
