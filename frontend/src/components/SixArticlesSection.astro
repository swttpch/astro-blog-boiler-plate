---
import type Article from '../interfaces/article';
import Container from './Container.astro';
import Screen from './Screen.astro';
import LinkWithArrow from './LinkWithArrow.astro';
import SectionHeader from './SectionHeader.astro';
import ArticleComponent from './article/Article.astro';
import ArticleContent from './article/ArticleContent.astro';
import ArticleTitle from './article/ArticleTitle.astro';
import ArticleImage from './article/ArticleImage.astro';
import AuthorBox from './author-box/AuthorBox.astro';
import AuthorBoxAvatar from './author-box/AuthorBoxAvatar.astro';
import AuthorBoxBody from './author-box/AuthorBoxBody.astro';
import AuthorBoxName from './author-box/AuthorBoxName.astro';
import AuthorBoxArticleInfo from './author-box/AuthorBoxArticleInfo.astro';
import FormattedDate from './FormattedDate.astro';
import { getLang, useTranslations } from '../i18n/utils';

type Props = {
  title: string;
  url?: string;
  articles: Article[];
};

const { title, url, articles } = Astro.props;

const refinedArray = [...articles, ...articles].splice(0, 6);
const lang = getLang();
const t = useTranslations(lang);
---

{
  articles && articles.length > 0 && (
    <Screen class={'lg:py-80'}>
      <Container class="flex-col">
        <SectionHeader title={title}>
          {url && <LinkWithArrow to={url}> {t('seeAll_male')} </LinkWithArrow>}
        </SectionHeader>
        <div class="flex gap-32 self-stretch lg:flex-row">
          <div class="flex flex-col lg:flex-row gap-32 flex-wrap justify-between self-stretch w-full">
            {refinedArray.map((article) => {
              const author = article.attributes.author.data;
              const date = article.attributes.publishedAt;
              return (
                <ArticleComponent
                  href={'/p/' + article.attributes.slug}
                  class={'lg:max-w-[calc((100%/2)-16px)] lg:flex-[1_0_100%] flex-col lg:flex-row'}
                >
                  <ArticleImage
                    image={article.attributes.mainImage.data}
                    class={'hidden lg:flex flex-[0_0_200px]'}
                  />
                  <ArticleContent class={'lg:flex-0 gap-24 p-16 lg:p-0'}>
                    <ArticleTitle class="font-medium whitespace-break-spaces text-wrap break-words lg:h-[97px] overflow-hidden text-ellipsis">
                      {article.attributes.title}
                    </ArticleTitle>
                    {author && (
                      <AuthorBox>
                        <AuthorBoxAvatar
                          image={author.attributes.avatar?.data}
                          name={author.attributes.name}
                        />
                        <AuthorBoxBody>
                          <AuthorBoxName>{author.attributes.name}</AuthorBoxName>
                          <AuthorBoxArticleInfo class={'text-text-soft'}>
                            <FormattedDate date={new Date(date)} /> â€¢{' '}
                            {article.attributes.readingTime} {t('readingTime')}
                          </AuthorBoxArticleInfo>
                        </AuthorBoxBody>
                      </AuthorBox>
                    )}
                  </ArticleContent>
                </ArticleComponent>
              );
            })}
          </div>
        </div>
      </Container>
    </Screen>
  )
}
