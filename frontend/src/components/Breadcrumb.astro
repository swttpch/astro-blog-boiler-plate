---
import { twMerge } from 'tailwind-merge';
import ChevronRightIcon from './icons/ChevronRightIcon.astro';
import HomeIcon from './icons/HomeIcon.astro';

type BreadcrumbBullet = {
  title: string;
  url?: string;
};
type Props = {
  items: Array<
    BreadcrumbBullet | BreadcrumbBullet[]
  >;
};
const { items = [] } = Astro.props;
---

<div class="justify-start items-center gap-16 flex overflow-scroll w-full">
  <HomeIcon />
  <div class="flex items-center gap-[8px]">
    <div class="p-2 rounded-sm justify-center items-center gap-10 flex">
      <a href='/' class="text-text-soft text-small font-normal break-words hover:text-text-sub ">In√≠cio</a>
    </div>
    {
      items.map((item, index) => {
        const classTemp = index === items.length - 1 ? 'text-primary-base font-normal whitespace-nowrap hover:text-primary-dark' :  'text-text-soft font-normal whitespace-nowrap hover:text-text-sub';
        return (
          <>
            <ChevronRightIcon />
            <div class="flex items-start gap-8">
              {item instanceof Array ? (
                item.map((subitem, subindex) => {
                  const Component = subitem.url ? 'a' : 'p';
                  return (
                    <div
                    class={twMerge([classTemp, 'hover:text-none'])}

                    >
                      {subindex === 0 ? '' : '/'}
                      <Component
                        href={subitem.url}
                        class={twMerge([classTemp])}
                      >
                        {subitem.title}
                      </Component>
                    </div>
                  );
                })
              ) : item.url ? (
                <a
                  href={item.url}
                  class={twMerge([classTemp])}

                >
                  {item.title}
                </a>
              ) : (
                <p
                class={twMerge([classTemp])}

                >
                  {item.title}
                </p>
              )}
            </div>
          </>
        );
      })
    }
  </div>
</div>
