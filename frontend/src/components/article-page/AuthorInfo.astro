---
import type Author from '../../interfaces/author';
import type Meta from '../../interfaces/meta';
import fetchApi from '../../lib/strapi';
import AuthorBoxAvatar from '../AuthorBox/AuthorBoxAvatar.astro';
import ArrowLeftIcon from '../icons/ArrowLeftIcon.astro';
import Socials from '../icons/Socials.astro';

type Props = {
  author: Author;
};
const { author } = Astro.props;

const {
  pagination: { total },
} = await fetchApi<Meta>({
  endpoint: 'articles',
  wrappedByKey: 'meta',
  query: {
    filters: {
      author: {
        id: {
          $eq: author.id,
        },
      },
    },
    fields: ['id'],
  },
});
---

<div
  class="p-40 bg-text-gray-100 rounded-2xl overflow-hidden border border-border-soft justify-center lg:justify-start lg:items-start gap-32 lg:gap-48 flex self-stretch flex-col lg:flex-row"
>
  <div class="flex flex-col justify-start items-center lg:items-start gap-16">
    <AuthorBoxAvatar
      class="w-[128px] h-[128px]"
      src={author.attributes.avatar?.data.attributes.url}
      name={author.attributes.name}
    />
    <div class="p-8 bg-text-gray-100 rounded-xs justify-start items-start gap-10 flex">
      <div class="text-text-main text-sm font-semibold break-words">{total} publicações</div>
    </div>
  </div>
  <div class="flex-[1] flex flex-col justify-start items-start gap-24">
    <div class="self-stretch h-48 flex flex-col justify-start items-start">
      <div class="justify-start items-center gap-4 flex">
        <div class="text-text-main text-lg font-bold break-words">{author.attributes.name}</div>
      </div>
      <div class="self-stretch text-text-soft text-sm font-semibold break-words">
        {author.attributes.jobTitle}
      </div>
    </div>
    <div class="self-stretch flex flex-col justify-start items-start gap-8">
      <div class="self-stretch text-text-sub text-base font-normal break-words">
        {author.attributes.description}
      </div>
      <a href="" class="justify-start items-center gap-[12px] flex">
        <div class="text-primary-base text-base font-normal break-words">Ver mais</div>
        <button
          class="w-[20px] h-[20px] rounded-full border border-primary-base justify-center items-center gap-8 flex"
        >
          <ArrowLeftIcon />
        </button>
      </a>
    </div>
  </div>
  {
    author.attributes.socials && (
      <div class="flex flex-col justify-start items-start gap-24">
        <div class="text-text-main text-lg font-bold break-words">Redes sociais</div>
        <div class="self-stretch flex flex-col justify-start items-start gap-8">
          {author.attributes.socials.map((social) => (
            <a href={social.url} class="justify-start items-center gap-4 flex">
              <Socials social={social.type} class={'size-16'} />
              <div class="text-text-main text-base font-normal break-words">{social.type}</div>
            </a>
          ))}
        </div>
      </div>
    )
  }
</div>
